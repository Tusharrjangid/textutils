{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","about","onClick","toggleMode","form","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","replace","split","length","defaultProps","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.5cedbf19.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        \r\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item active\">\r\n              <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\"></span></a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\">{props.about}</a>\r\n            </li>\r\n          </ul>\r\n          {/* <form classNameName=\"form-inline my-2 my-lg-0\">\r\n            <input classNameName=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n            <button classNameName=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n          </form> */}\r\n          <div className={`form-check form-switch text-${props.mode === 'light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className=\"form-check-label\" form=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n          </div>\r\n      </div>\r\n    </div>\r\n</nav>\r\n  )\r\n}\r\n\r\n\r\nNavbar.propTypes= {\r\n    title:PropTypes.string,\r\n    about: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps= {\r\n    title:'set title',\r\n    about: \"About text here\"\r\n}","import React,{useState} from  'react'\r\n\r\n\r\n\r\nexport default function TextForm(props) {\r\n  const  handleUpClick = () =>{\r\n    let newText= text.toUpperCase();\r\n    setText(newText)\r\n    props.showAlert(\"Converted to Upper Case\",\"success\");\r\n  }\r\n  const  handleLoClick = () =>{\r\n    let newText= text.toLowerCase();\r\n    setText(newText)\r\n    props.showAlert(\"Converted to Lower Case\",\"success\");\r\n  }\r\n  const  handleClear = () =>{\r\n    let newText= text.replace(text,\"hello\")\r\n    setText(newText)\r\n    props.showAlert(\"Printed Hello in it \",\"success\");\r\n  }\r\n  const  handleOnChange = (event) =>{\r\n    setText(event.target.value)\r\n  }\r\n\r\n  const [text,setText]=useState(' ');\r\n  return (\r\n    <>\r\n    <div className='container' style={{color:props.mode === 'dark'?'white':'#042743'}}>\r\n        <h1 >{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" value={text} onChange={handleOnChange}style={{backgroundColor:props.mode === 'dark'?'grey':'white',color:props.mode === 'dark'?'white':'black'}}id=\"myBox\"  rows=\"8\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>  Conver to upperCase</button>\r\n        <button className=\"btn btn-primary\" onClick={handleLoClick}>  Conver to LowerCase</button>\r\n        <button className=\"btn btn-primary\" onClick={handleClear}>  Print Hello</button>\r\n    </div>\r\n    <div className=\"container my-3\" style={{color:props.mode === 'dark'?'white':'#042743'}}>\r\n      <h1>Your text summary</h1>\r\n      <p>you have typed {text.split(\" \").length} words and  {text.length} characters</p>\r\n      <p>{0.008 * text.split(\" \").length}</p>\r\n      <h2>Preview</h2>\r\n      <p>{text.length>0?text:\"Enter the text above to preview\"}</p>\r\n    </div>\r\n    </>\r\n\r\n  )\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n    const capitalize=(word)=>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+ lower.slice(1);\r\n    }\r\n  return (\r\n    \r\n      props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n            {/* <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"> */}\r\n          {/* <span aria-hidden=\"true\">&times;</span> */}\r\n        {/* </button> */}\r\n      </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n// import About from './components/About';\nimport React, { useState } from 'react';\n// import { type } from '@testing-library/user-event/dist/type';\n\n\nfunction App() {\n  const [mode,setMode]=useState('light');\n  const [alert,setAlert]=useState(null)\n\n  const showAlert = (message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n  \n\n  const toggleMode =()=>{\n    if(mode ==='light'){\n      setMode('dark')\n      document.body.style.backgroundColor='#042743'\n      showAlert(\"Dark mode has been enabled\",\"success\");\n      document.title='Textutils - Dark Mode'\n      // setInterval(() => {\n      //   document.title('Set browserr now')        \n      // }, 2000);\n      // setInterval(() => {\n      //   document.title('Install Set browserr now')        \n      // }, 1500);\n\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor='white'\n      showAlert(\"Light mode has been enabled\",\"warning\")\n      document.title='Textutils - Light Mode'\n    }\n  }\n  return (\n    <>\n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}/>\n    {<div className=\"container my-3\" >\n    <TextForm showAlert={showAlert} heading=\"Enter the text to analyze\" mode={mode}/>\n    </div>}\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}